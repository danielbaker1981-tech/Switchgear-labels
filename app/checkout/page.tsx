'use client'
import { useEffect, useState } from 'react'
import Link from 'next/link'
type Item={id:string; cfg:any; unit:number; total:number; svg:string}
export default function Checkout(){ const [items,setItems]=useState<Item[]>([]); useEffect(()=>{ try{ setItems(JSON.parse(localStorage.getItem('basket_v1')||'[]')) }catch{} },[]); const total=items.reduce((s,i)=>s+i.total,0); return (<div className="grid md:grid-cols-3 gap-6"><section className="card p-6 md:col-span-2"><h1 className="text-2xl font-extrabold mb-2">Checkout</h1>{items.length===0 && <p className="text-sm text-slate-600">Basket is empty. <Link className="underline" href="/designer">Open the designer</Link></p>}{items.map(i=>(<div key={i.id} className="flex gap-3 items-start border-b py-3"><div className="w-28 h-16 bg-white border rounded-md overflow-hidden" dangerouslySetInnerHTML={{__html:i.svg}}/><div className="flex-1 text-sm"><div className="font-medium">{i.cfg.widthMm} × {i.cfg.heightMm} mm · {i.cfg.lines.filter((l:string)=>l.trim()).join(' / ')}</div><div className="text-slate-600">Qty {i.cfg.quantity} × £{i.unit.toFixed(2)}</div><div className="text-slate-500 text-xs">Adhesive: {i.cfg.adhesiveId||'none'} · Colour: {i.cfg.colourId}</div></div><div className="font-semibold">£{i.total.toFixed(2)}</div></div>))}</section><aside className="card p-6 space-y-3"><div className="flex justify-between"><span>Subtotal</span><span className="font-semibold">£{total.toFixed(2)}</span></div><button className="btn btn-primary w-full">Request invoice (stub)</button><button className="btn btn-outline w-full">Pay with Stripe (stub)</button><button className="btn btn-outline w-full">Pay with PayPal (stub)</button><p className="text-xs text-slate-500">We can wire real payments & emails later.</p></aside></div>) }